name: Build, deploy and audit
'on':
  push:
    branches:
      - main
      - 'feature/**'
      - 'fix/**'
  schedule:
    - cron: '0 12 * * 0'
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Use Bun 1.0.22
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.22
      - name: Install deps
        run: bun install --frozen-lockfile && bun run playwright install --with-deps && cd node_modules/sharp && bun install
      - name: Run E2E tests
        run: bun run test:e2e
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      - name: Upload E2E artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Build
        run: bun run build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Deploy
        if: github.ref == 'refs/heads/main'
        uses: Dabolus/deploy-firebase@v0.1.0
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT }}
      - name: Purge cache, audit, and report
        if: github.ref == 'refs/heads/main'
        run: |
          # Install libgbm
          sudo apt-get -y install libgbm1 fonts-roboto
          # Install Puppeteer browsers
          bun run node_modules/puppeteer/install.mjs
          # Run the postdeploy script
          bun run scripts/postdeploy.ts
        env:
          REPORTER_BASE_URL: ${{ secrets.REPORTER_BASE_URL }}
          REPORTER_BOT_TOKEN: ${{ secrets.REPORTER_BOT_TOKEN }}
          REPORTER_CHAT_ID: ${{ secrets.REPORTER_CHAT_ID }}
          REPORTER_PROJECT_NAME: ${{ secrets.REPORTER_PROJECT_NAME }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
